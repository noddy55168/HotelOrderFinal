@model IEnumerable<HotelOrderFinal.Models.Admin>

@{
    ViewData ["Title"] = "List";
}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<section class="breadcrumb_area">
    <div class="overlay bg-parallax" data-stellar-ratio="0.8" data-stellar-vertical-offset="0" data-background=""></div>
    <div class="container">
        <div class="page-cover text-center">
            <h2 class="page-cover-tittle">後台管理系統</h2>
        </div>
    </div>
</section>

<div class="Adminwrapper">

    <div class="row">

        @*//【側邊欄位】==========================================================================*@
        <div class="col-xs-12 col-md-3">
            <div class=" ">
                <div class=" ">
                    <div class="">
                        @{
                            var AdminId = Context.Session.GetString ( "AdminId" );
                        }
                        <h2 class="">@AdminId</h2>
                    </div>
                </div>
                <div class="">
                    <ul class="list" style="list-style: none;">
                        <!--改成手風琴下拉式-->
                        <li>
                            @Html.ActionLink("會員管理", "ShoppingCar", "Member", null, new { @class = "nav-link Adminbutton  d-flex justify-content-center" })
                        </li>
                        <li>
                            @Html.ActionLink("房型管理", "AdminRoom", "Room", null, new { @class = "nav-link Adminbutton  d-flex justify-content-center" })
                        </li>
                        <li>
                            @Html.ActionLink("活動管理", "ActivityByCreate", "Activity", null, new { @class = "nav-link Adminbutton  d-flex justify-content-center" })
                        </li>
                        <li>
                            @Html.ActionLink("訂房管理", "EditPassword", "Member", null, new { @class = "nav-link Adminbutton  d-flex justify-content-center" })
                        </li>
                        <li>
                            @Html.ActionLink("飯店一覽管理", "ListView", "HotelIndustry", null, new { @class = "nav-link Adminbutton  d-flex justify-content-center" })
                        </li>
                        <li>
                            @Html.ActionLink("優惠折扣管理", "List", "Discount", null, new { @class = "nav-link Adminbutton  d-flex justify-content-center" })
                        </li>
                        <li>
                            @Html.ActionLink("評論管理", "ListByAdmin", "Comment", null, new { @class = "nav-link Adminbutton  d-flex justify-content-center" })
                        </li>
                        <li>
                            @Html.ActionLink("房型管理", "ListByAdmin", "Room", null, new { @class = "nav-link Adminbutton  d-flex justify-content-center" })
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <!--這個區塊放圖表-->
        <table class="table  col-md-3">
            <thead>
                <div class="Admincanvas">
                    <canvas id="circle"></canvas>
                </div>
                <div class="Admincanvas">
                    <canvas id="bar"></canvas>
                </div>
                <div class="Admincanvas">
                    <canvas id="line"></canvas>
                </div>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>

    <!--這div要有，不然版面會亂-->
    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>

<script>
    //圓餅圖
    const data1 = {
        labels: [
            '資料1',
            '資料2',
            '資料3'
        ],
        datasets: [{
            label: '資料名稱',
            data: [300, 50, 100],
            backgroundColor: [
                'rgb(255, 99, 132)',
                'rgb(54, 162, 235)',
                'rgb(255, 205, 86)'
            ],
            hoverOffset: 4
        }]
    };
    const circleconfig = {
        type: 'pie',
        data: data1,
        options: {
            responsive: false, // 設置圖表為響應式
            aspectRatio: 1 // 不保持固定的寬高比
            // 設置圖表尺寸
            //width: 800,
            //height: 800
        }
    };
    const chart = new Chart(document.getElementById('circle'), circleconfig);

    //長條圖
    const data2 = {
        labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
        datasets: [{
            label: '# of Votes',
            data: [12, 19, 3, 5, 2, 3],
            borderWidth: 1
        }]
    };
    const barconfig = {
        type: 'bar',
        data: data2,
        options: {
            responsive: false, // 設置圖表為響應式
            aspectRatio: 1 // 不保持固定的寬高比
        }
    };
    const barchart = new Chart(document.getElementById('bar'), barconfig);
    //折線圖
    const labels = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'];
    const data3 = {
        labels: labels,
        datasets: [{
            label: 'My First Dataset',
            data: [65, 59, 80, 81, 56, 55, 40],
            fill: false,
            borderColor: 'rgb(75, 192, 192)',
            tension: 0.1
        }]
    };
    const lineconfig = {
        type: 'line',
        data: data3,
        options: {
            responsive: false,
            aspectRatio: 1
        }
    };
    const linechart = new Chart(document.getElementById('line'), lineconfig);
</script>
